{"version":3,"sources":["components/Chart/Chart.module.css","App.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/Symptoms/Symptoms.jsx","App.js","index.js","components/Symptoms/Symptoms.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifData","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legends","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","NavBar","Navbar","bg","Brand","href","Nav","Link","Copyright","getFullYear","useStyles","makeStyles","theme","root","flexDirection","minHeight","main","marginTop","marginBottom","footer","padding","palette","type","grey","StickyFooter","classes","Container","maxWidth","Symptoms","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,UAAY,2B,0CCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,yDCA9BD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,+NC+CpJC,EA1CA,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAClD,OAAIH,EAID,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAC/B,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,8CAGZ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACrE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,6CAGZ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACrE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAEnE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAhCT,c,yBCNTQ,EAAM,iCAECC,EAAS,uCAAG,WAAMC,GAAN,6BAAAC,EAAA,6DAEjBC,EAAgBJ,EAEjBE,IACHE,EAAa,UAAMJ,EAAN,sBAAuBE,IALf,kBASgDG,IAAMC,IAAIF,GAT1D,2BASVnC,KAAOC,EATG,EASHA,UAAWC,EATR,EASQA,UAAWC,EATnB,EASmBA,OAAQC,EAT3B,EAS2BA,WAEtCkC,EAAY,CACdrC,YACAC,YACAC,SACAC,cAfa,kBAkBVkC,GAlBU,kCAsBjBC,QAAQC,IAAR,MAtBiB,0DAAH,sDA0BTC,EAAc,uCAAG,gCAAAP,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAEF0C,EAAe1C,EAAK2C,KAAI,SAACC,GAAD,MAAgB,CAC1C3C,UAAW2C,EAAU3C,UAAU4C,MAC/B1C,OAAQyC,EAAUzC,OAAO0C,MACzBC,KAAMF,EAAUG,eAPE,kBAUfL,GAVe,gCAYtBH,QAAQC,IAAR,MAZsB,yDAAH,qDAgBdQ,EAAc,uCAAG,8BAAAd,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAERkB,EAFQ,EAEfjD,KAAOiD,UAFQ,kBAIfA,EAAUN,KAAI,SAACV,GAAD,OAAaA,EAAQiB,SAJpB,gCAMtBX,QAAQC,IAAR,MANsB,yDAAH,qD,0BCyBZW,EAlEA,SAAC,GAAsD,IAAD,IAApDnD,KAAOC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,OAAU8B,EAAa,EAAbA,QAAa,EAE/BmB,mBAAS,IAFsB,mBAE1DR,EAF0D,KAE/CS,EAF+C,KAIjEC,qBAAU,YACQ,uCAAG,sBAAApB,EAAA,kEACbmB,EADa,SACMZ,IADN,6EAAH,qDAIdc,KACD,IAGH,IAAMC,EACFZ,EAAUa,OACP,kBAAC,IAAD,CACCzD,KAAQ,CACJ0D,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACP3D,KAAM4C,EAAUD,KAAI,qBAAG1C,aACvB2D,MAAO,kBACPC,YAAa,UACbC,MAAK,GACN,CACC9D,KAAM4C,EAAUD,KAAI,qBAAGxC,UACvByD,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAK,OAGX,KAGJE,EACF/D,EAEI,kBAAC,IAAD,CACAD,KAAM,CACF0D,OAAQ,CAAC,WAAY,YAAa,UAElCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,uBACA,uBACA,wBAEJ/D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGxDuC,QAAS,CACLC,QAAS,CAAEC,SAAS,GACpBC,MAAO,CAACD,SAAS,EAAME,KAAK,aAAD,OAAepC,OAG9C,KAGR,OACI,yBAAK5B,UAAWC,IAAOC,WACtB0B,EAAU+B,EAAWR,EADtB,M,oCCrCOc,EAvBQ,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEEnB,mBAAS,IAFX,mBAEvCoB,EAFuC,KAErBC,EAFqB,KAa9C,OATAnB,qBAAU,YACQ,uCAAG,sBAAApB,EAAA,kEACbuC,EADa,SACazB,IADb,6EAAH,qDAGdO,KACD,CAACkB,IAEJlC,QAAQC,IAAIgC,GAGR,kBAACE,EAAA,EAAD,CAAarE,UAAWC,IAAOqE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOtD,SACxE,4BAAQA,MAAM,IAAd,UACC8C,EAAiB7B,KAAI,SAACV,EAASgD,GAAV,OAAgB,4BAAQC,IAAKD,EAAGvD,MAAOO,GAAUA,S,oCCHxEkD,EAdA,WACX,OAAO,kBAAC,IAAD,KACH,6BACJ,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAO9D,QAAQ,QAClB,kBAAC6D,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,oBACA,kBAACC,EAAA,EAAD,CAAKnF,UAAU,WACf,kBAACmF,EAAA,EAAIC,KAAL,CAAUF,KAAK,SAAf,QACA,kBAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,mDAAmDP,OAAO,UAAzE,c,2BCPZ,SAASU,IACP,OACE,kBAACtE,EAAA,EAAD,CAAYG,QAAQ,QAAQF,MAAM,iBAC/B,gBACD,kBAACoE,EAAA,EAAD,CAAMpE,MAAM,UAAUkE,KAAK,0DAA3B,2BAEQ,OACP,IAAI1D,MAAO8D,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ5B,QAAS,OACT6B,cAAe,SACfC,UAAW,SAEbC,KAAM,CACJC,UAAWL,EAAMrF,QAAQ,GACzB2F,aAAcN,EAAMrF,QAAQ,IAE9B4F,OAAQ,CACNC,QAASR,EAAMrF,QAAQ,EAAG,GAC1B0F,UAAW,OACXpC,gBACyB,UAAvB+B,EAAMS,QAAQC,KAAmBV,EAAMS,QAAQE,KAAK,KAAOX,EAAMS,QAAQE,KAAK,UAIrE,SAASC,IACtB,IAAMC,EAAUf,IAEhB,OACE,6BACE,4BAAQvF,UAAWsG,EAAQN,QACzB,kBAACO,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACzF,EAAA,EAAD,CAAYG,QAAQ,SAAQ,kBAACmE,EAAD,U,4HC2DvBoB,GA7FE,WACb,OACI,yBAAKzG,UAAWC,IAAOC,WACvB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACG,QAAQ,UACnB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,OAC5D,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,QAAQ,KAAKD,cAAY,GAA3D,sBACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,yLAGA,6BACA,6BACA,kBAACH,EAAA,EAAD,CAAYC,MAAM,eAClB,4BACA,qCACA,qCACA,2EACA,4DACA,2CACA,wCACA,2CACA,4DAGD,kBAACD,EAAA,EAAD,CAAYG,QAAQ,IAAIF,MAAM,eAA9B,+MAIA,6BACA,6BACA,kBAACD,EAAA,EAAD,CAAYC,MAAM,iBAClB,uBAAGkE,KAAK,2EAA2EP,OAAO,UAA1F,sCADA,sEAOL,kBAACxE,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,OAC9D,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,QAAQ,KAAKD,cAAY,GAA3D,oBACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,0pBAOA,6BACA,6BACA,kBAACH,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,QAAQ,KAAKD,cAAY,GAA3D,kCACA,kBAACF,EAAA,EAAD,CAAYC,MAAM,cAAcC,cAAY,GAA5C,sBAAgE,iEAAhE,qBAA+H,oEAC/H,kBAACF,EAAA,EAAD,CAAYC,MAAM,cAAcE,QAAQ,IAAID,cAAY,GACpD,4BACI,iDACA,wEACA,oEACA,qDAGR,kBAACF,EAAA,EAAD,CAAYC,MAAM,cAAcC,cAAY,GAA5C,sIACA,6BACA,kBAACF,EAAA,EAAD,CAAYC,MAAM,cAAcC,cAAY,GAAC,6EAA7C,mJAIP,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,OAC7D,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,QAAQ,KAAKD,cAAY,GAA3D,sBACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KACpB,4BACG,uDACA,8CACA,+DACA,uYAMH,kBAACH,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAC,kBAAC,KAAD,MAA/C,KAA8D,uBAAGiE,KAAK,kCAAkCP,OAAO,UAAjD,iBAC9D,kBAAC5D,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAC,kBAAC,KAAD,MAA/C,KAA+D,uBAAGiE,KAAK,qCAAqCP,OAAO,UAApD,mBAC/D,kBAAC5D,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAC,kBAAC,KAAD,MAA/C,KAA+D,uBAAGiE,KAAK,2DAA2DP,OAAO,UAA1E,kBAC/D,kBAAC5D,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAC,kBAAC,KAAD,MAA/C,KAAgE,uBAAGiE,KAAK,iEAAiEP,OAAO,UAAhF,aAChE,kBAAC5D,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAAC,kBAAC,KAAD,MAA/C,KAA2D,uBAAGiE,KAAK,yDAAyDP,OAAO,UAAxE,sB,qBC/CjE+B,G,4MAtCXC,MAAQ,CACJhH,KAAM,GACNiC,QAAS,I,EASbsC,oB,uCAAsB,WAAMtC,GAAN,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZgF,EADY,OAGlB,EAAKC,SAAS,CAAClH,KAAMiH,EAAahF,QAASA,IAHzB,2C,wPALQD,I,OAApBiF,E,OAENE,KAAKD,SAAS,CAAClH,KAAMiH,I,qIASf,IAAD,EACqBE,KAAKH,MAAvBhH,EADH,EACGA,KAAMiC,EADT,EACSA,QAEd,OACI,6BACA,kBAAC,EAAD,MAEA,yBAAK5B,UAAWC,KAAOC,WACpB,kBAAC,EAAD,CAAOP,KAAMA,IACb,kBAAC,EAAD,CAAeuE,oBAAqB4C,KAAK5C,sBACzC,kBAAC,EAAD,CAAOvE,KAAMA,EAAMiC,QAASA,IAC5B,kBAAC,GAAD,OAGH,kBAACyE,EAAD,W,GAjCMU,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,GAAD,MAAQC,SAASC,eAAe,U,mBCJhD5H,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,0B","file":"static/js/main.47d12b0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3XtVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__bikoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2IPQl\",\"card\":\"Cards_card__2DZQH\",\"infected\":\"Cards_infected__1TVVD\",\"recovered\":\"Cards_recovered__3O7uf\",\"deaths\":\"Cards_deaths__Qqopt\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards  = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n       <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of people infected with Covid-19 </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered cases from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n           </Grid>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n    changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n        const modifData = {\r\n            confirmed ,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n        \r\n        return modifData;\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);   \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n    \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\nconst Chart  = ({data: {confirmed, recovered, deaths} , country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, []);\r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (<Line \r\n            data = {{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Confirmed Cases',\r\n                    borderColor: '#3333ff',\r\n                    fill:true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n        \r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legends: { display: false},\r\n                title: {display: true, text: `Data from ${country}`},\r\n            }}\r\n             />\r\n        ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        {country ? barChart : lineChart};\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker  = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI()\r\n    }, [setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return <BrowserRouter>\r\n        <div>\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/home\">Covid-19 Tracker</Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/marcreginald/covid-19-tracker\" target=\"_blank\">About</Nav.Link>\r\n            </Nav>\r\n  </Navbar>\r\n        </div>\r\n        </BrowserRouter>\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Developed by '}\r\n      <Link color=\"inherit\" href=\"https://marcreginald.github.io/marcreginald-portfolio/\">\r\n        Marc Reginald Panaligan\r\n      </Link>{' , '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\"><Copyright /></Typography>\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Symptoms.module.css';\r\nimport cx from 'classnames';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nconst Symptoms = () => {\r\n    return(\r\n        <div className={styles.container}>\r\n        <Grid container justify=\"center\">\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Watch for symptoms</Typography>\r\n                     <Typography variant=\"p\">\r\n                     People with COVID-19 have had a wide range of symptoms reported – ranging from mild symptoms to severe illness. These symptoms may appear 2-14 days after exposure to the virus:\r\n                     </Typography>\r\n                     <br/>\r\n                     <br/>\r\n                     <Typography color=\"textPrimary\">\r\n                     <ul>\r\n                     <li>Fever</li>\r\n                     <li>Cough</li>\r\n                     <li>Shortness of breath or difficulty breathing</li>\r\n                     <li>Repeated shaking with chills</li>\r\n                     <li>Muscle pain</li>\r\n                     <li>Headache</li>\r\n                     <li>Sore throat</li>\r\n                     <li>New loss of taste or smell</li>\r\n                     </ul>\r\n                    </Typography> \r\n                    <Typography variant=\"p\" color=\"textPrimary\">\r\n                    Children have similar symptoms to adults and generally have mild illness.\r\n                    This list is not all inclusive. Please consult your medical provider for any other symptoms that are severe or concerning to you.\r\n                    </Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    <Typography color=\"textSecondary\">\r\n                    <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/symptoms.html\" target=\"_blank\">Symptoms of Coronavirus (COVID-19)</a>\r\n                     - United States Centers for Disease Control and Prevention (CDC)\r\n                    </Typography>\r\n                 </CardContent>\r\n             </Grid>           \r\n\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Typical Symptoms</Typography>\r\n                     <Typography variant=\"p\">\r\nCOVID-19 typically causes flu-like symptoms including a fever and cough.\r\nIn some patients - particularly the elderly and others with other chronic health conditions - these symptoms can develop into pneumonia, with chest tightness, chest pain, and shortness of breath.\r\nIt seems to start with a fever, followed by a dry cough.\r\nAfter a week, it can lead to shortness of breath, with about 20% of patients requiring hospital treatment.\r\nNotably, the COVID-19 infection rarely seems to cause a runny nose, sneezing, or sore throat (these symptoms have been observed in only about 5% of patients). Sore throat, sneezing, and stuffy nose are most often signs of a cold.\r\n                     </Typography>\r\n                     <br/>\r\n                     <br/>\r\n                     <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>When to Seek Medical Attention</Typography>\r\n                     <Typography color=\"textPrimary\" gutterBottom>If you have any of <stron>these emergency warning signs*</stron> for COVID-19 get <strong> medical attention immediately:</strong></Typography>\r\n                     <Typography color=\"textPrimary\" variant=\"p\" gutterBottom>\r\n                         <ul>\r\n                             <li>Trouble breathing</li>\r\n                             <li>Persistent pain or pressure in the chest</li>\r\n                             <li>New confusion or inability to arouse</li>\r\n                             <li>Bluish lips or face</li>\r\n                         </ul>\r\n                     </Typography>\r\n                     <Typography color=\"textPrimary\" gutterBottom>*This list is not all inclusive. Please consult your medical provider for any other symptoms that are severe or concerning to you.</Typography>\r\n                     <br/>\r\n                     <Typography color=\"textPrimary\" gutterBottom><strong>Call 911 if you have a medical emergency:</strong> Notify the operator that you have, or think you might have, COVID-19. If possible, put on a cloth face covering before medical help arrives.</Typography>\r\n                 </CardContent>\r\n             </Grid> \r\n\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>About this project</Typography>\r\n                     <Typography variant=\"p\">\r\n                     <ul>\r\n                        <li>Name: covid-19-tracker,</li>\r\n                        <li>version: 0.1.0</li>  \r\n                        <li>Author: Marc Reginald Panaligan</li>\r\n                        <li>Description:  This project is created to monitor the data of the Infected, Recovered and Died because of the virus, it only tracks the current data of the current day it does not show the previous data \r\n                        of the country selected. The API used for this project is https://covid19.mathdro.id/api. And Credits to https://github.com/adrianhajdin for the reference.</li>  \r\n                        </ul>\r\n                             \r\n                  </Typography>\r\n                  \r\n                     <Typography color=\"textSecondary\" gutterBottom>Socials:</Typography>\r\n                     <Typography color=\"textSecondary\" gutterBottom><GitHubIcon/>: <a href=\"https://github.com/marcreginald\" target=\"_blank\">marcreginald</a></Typography>\r\n                     <Typography color=\"textSecondary\" gutterBottom><TwitterIcon/>: <a href=\"https://twitter.com/marc_panaligan\" target=\"_blank\">marc_panaligan</a></Typography>\r\n                     <Typography color=\"textSecondary\" gutterBottom><YouTubeIcon/>: <a href=\"https://www.youtube.com/channel/UCgn8-bPySGw9gTaIyjLLYXg\" target=\"_blank\">Marc Reginald</a></Typography>\r\n                     <Typography color=\"textSecondary\" gutterBottom><LinkedInIcon/>: <a href=\"https://www.linkedin.com/in/marc-reginald-panaligan-a06697123/\" target=\"_blank\">LinkedIn</a></Typography>\r\n                     <Typography color=\"textSecondary\" gutterBottom><WebIcon/>: <a href=\"https://marcreginald.github.io/marcreginald-portfolio/\" target=\"_blank\">My Portfolio</a></Typography>\r\n                 </CardContent>\r\n             </Grid>           \r\n        </Grid>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Symptoms;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker, NavBar, StickyFooter, Symptoms} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n   \r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        \r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n            <div>\r\n            <NavBar/>\r\n           \r\n            <div className={styles.container}>\r\n               <Cards data={data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n               <Symptoms/>\r\n            </div>\r\n\r\n            <StickyFooter/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Symptoms_container__2mMHX\",\"card\":\"Symptoms_card__3KXnj\"};"],"sourceRoot":""}